@model VendingMachine.Models.AdminModel

@{
    ViewData["Title"] = "Index";
}

<h1>Products</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<div class="table-responsive">
    <form asp-action="Index" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Image
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Products[0].Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Products[0].Price)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Products[0].ImageUrl)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Products[0].Quantity)
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Products.Count; i++)
                {
                    <tr>
                        <td>
                            <img src="@Model.Products[i].ImageUrl" asp-append-version="true" alt="@Model.Products[i].ImageUrl" class="img-thumbnail" width="110" />
                            <input type="hidden" asp-for="@Model.Products[i].Id" />
                        </td>
                        <td>
                            <div class="form-group">
                                <input asp-for="@Model.Products[i].Name" class="form-control" />
                                <span asp-validation-for="@Model.Products[i].Name" class="text-danger"></span>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                <input asp-for="@Model.Products[i].Price" class="form-control" />
                                <span asp-validation-for="@Model.Products[i].Price" class="text-danger"></span>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                <input asp-for="@Model.Products[i].ImageUrl" class="form-control" />
                                <span asp-validation-for="@Model.Products[i].ImageUrl" class="text-danger"></span>
                                <div class="custom-file mt-1">
                                    <input type="file" name="files" class="custom-file-input" id="customFile" />
                                    <label class="custom-file-label" for="customFile">Choose file</label>
                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                <input asp-for="@Model.Products[i].Quantity" class="form-control" />
                                <span asp-validation-for="@Model.Products[i].Quantity" class="text-danger"></span>
                            </div>
                        </td>
                        <td>
                            <a asp-action="Edit" asp-route-id="@Model.Products[i].Id" class="mr-1">Edit</a>
                            <a asp-action="Delete" asp-route-id="@Model.Products[i].Id" class="mr-1">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary btn-lg" />
        </div>
    </form>
</div>

<script>
    $(document).ready(function () {
        bsCustomFileInput.init();

        var fileInputs = document.getElementsByName("files");
        for (let i = 0; i < fileInputs.length; i++) {
            fileInputs[i].addEventListener("change", (event) => {
                fileInputs[i].parentNode.parentNode.children[0].value = "Changed";
            });
        }
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
